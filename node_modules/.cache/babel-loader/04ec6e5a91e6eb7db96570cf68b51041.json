{"ast":null,"code":"var _class,\n    _jsxFileName = \"/home/jakebrowning/projects/mobx-test/src/App.tsx\",\n    _class2;\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport { observer } from \"mobx-react\";\nimport { AppStore } from \"./stores/AppStore\";\nimport { appApiInstance } from \"./AppApi\"; // Observer components subscribe to the AppStore observable, updating the @observable variables (i.e. store.app)\n// whenever a change occurs.\n\nlet AppViewer = observer(_class = class AppViewer extends Component {\n  render() {\n    const app = this.props.store.app;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, app.title, \" (\", app.private ? \"PRIVATE\" : \"PUBLIC\", \")\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, app.headline));\n  }\n\n}) || _class; // In this component, onChange and onClick are actions which trigger the store to update.\n\n\nlet AppEditor = observer(_class2 = class AppEditor extends Component {\n  render() {\n    const app = this.props.store.app;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Title: \", React.createElement(\"input\", {\n      type: \"text\",\n      value: app.title,\n      onChange: e => app.title = e.target.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"vis\",\n      onClick: () => app.private = !app.private,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), \" Public\");\n  }\n\n}) || _class2;\n\nconst App = () => {\n  const store = new AppStore(appApiInstance, 0);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(AppViewer, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      marginTop: \"5em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(AppEditor, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/jakebrowning/projects/mobx-test/src/App.tsx"],"names":["React","Component","observer","AppStore","appApiInstance","AppViewer","render","app","props","store","title","private","headline","AppEditor","e","target","value","App","marginTop"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AAEA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,SAAQC,cAAR,QAA6B,UAA7B,C,CAEA;AACA;;IAGMC,S,GADLH,Q,UAAD,MACMG,SADN,SACwBJ,SADxB,CACqD;AAC5CK,EAAAA,MAAP,GAAgB;AAAA,UACNC,GADM,GACE,KAAKC,KAAL,CAAWC,KADb,CACNF,GADM;AAGd,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,GAAG,CAACG,KAAT,QAAkBH,GAAG,CAACI,OAAJ,GAAc,SAAd,GAA0B,QAA5C,MADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,GAAG,CAACK,QADP,CAFG,CAAP;AAMD;;AAVkD,C,aAcrD;;;IAEMC,S,GADLX,Q,WAAD,MACMW,SADN,SACwBZ,SADxB,CACqD;AAC5CK,EAAAA,MAAP,GAAgB;AAAA,UACNC,GADM,GACE,KAAKC,KAAL,CAAWC,KADb,CACNF,GADM;AAEd,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAO,MAAA,IAAI,EAAE,MAAb;AAAqB,MAAA,KAAK,EAAEA,GAAG,CAACG,KAAhC;AAAuC,MAAA,QAAQ,EAAGI,CAAD,IAAOP,GAAG,CAACG,KAAJ,GAAYI,CAAC,CAACC,MAAF,CAASC,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC;AAAO,MAAA,IAAI,EAAE,UAAb;AAAyB,MAAA,EAAE,EAAE,KAA7B;AAAoC,MAAA,OAAO,EAAE,MAAMT,GAAG,CAACI,OAAJ,GAAc,CAACJ,GAAG,CAACI,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,YAAP;AAKD;;AARkD,C;;AAYrD,MAAMM,GAAa,GAAG,MAAM;AAC1B,QAAMR,KAAK,GAAG,IAAIN,QAAJ,CAAaC,cAAb,EAA6B,CAA7B,CAAd;AACA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEK,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAME;AAAK,IAAA,KAAK,EAAE;AAACS,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAET,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADJ;AAYD,CAdD;;AAgBA,eAAeQ,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nimport {observer} from \"mobx-react\";\nimport {AppStore} from \"./stores/AppStore\";\nimport {appApiInstance} from \"./AppApi\";\n\n// Observer components subscribe to the AppStore observable, updating the @observable variables (i.e. store.app)\n// whenever a change occurs.\n\n@observer\nclass AppViewer extends Component<{store: AppStore}> {\n  public render() {\n    const { app } = this.props.store;\n\n    return <div>\n        <h3>{app.title} ({app.private ? \"PRIVATE\" : \"PUBLIC\"})</h3>\n        <p>\n          {app.headline}\n        </p>\n    </div>\n  }\n}\n\n\n// In this component, onChange and onClick are actions which trigger the store to update.\n@observer\nclass AppEditor extends Component<{store: AppStore}> {\n  public render() {\n    const { app } = this.props.store;\n    return <div>\n            Title: <input type={\"text\"} value={app.title} onChange={(e) => app.title = e.target.value}/>\n            <br />\n            <input type={\"checkbox\"} id={\"vis\"} onClick={() => app.private = !app.private}/> Public\n          </div>;\n  }\n}\n\n\nconst App: React.FC = () => {\n  const store = new AppStore(appApiInstance, 0);\n  return (\n      <div className=\"App\">\n\n        <div className=\"section\">\n          <AppViewer store={store}/>\n        </div>\n\n        <div style={{marginTop: \"5em\"}}>\n          <AppEditor store={store}/>\n        </div>\n      </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}